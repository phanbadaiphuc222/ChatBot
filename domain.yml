version: "3.1"

intents:
  - greet
  - goodbye
  - affirm
  - deny
  - mood_great
  - mood_unhappy
  - bot_challenge
  - about_c
  - array
  - datatype
  - programming
  - variable
  - loop
  - for_loop
  - while_loop
  - do_while_loop
  - switch_case
  - break
  - error
  - runtime_error
  - syntax_error

responses:
  utter_greet:
  - text: "Hey! How are you?"

  utter_cheer_up:
  - text: "Here is something to cheer you up:"
    image: "https://i.imgur.com/nGF1K8f.jpg"

  utter_did_that_help:
  - text: "Did that help you?"

  utter_happy:
  - text: "Great, carry on!"

  utter_goodbye:
  - text: "Bye"

  utter_iamabot:
  - text: "I am a bot, powered by Rasa."

  utter_about_c:
  - text: "C is a general-purpose computer programming language.
   It was created in the 1970s by Dennis Ritchie, and remains very widely used and influential."
  
  utter_programming:
  - text: "Programming is the process of creating a set of instructions that tell a
      computer how to perform a task. Programming can be done using a variety of computer
      programming languages, such as JavaScript, Python, and C++."
  
  utter_datatype:
  - text: "C language has following data types. Int Represent the number (integer)
      Float Number with a fraction part. Double Double-precision floating-point
      value Char Single character. Void Special purpose type without
      any value. The image will give you the complete picture"
  
  utter_variable:
  - text: "• C variable is a named location in a memory where a program can manipulate\
      \ the data.\n • This location is used to hold the value of the variable.\n •\
      \ The value of the C variable may get change in the program.\n • C variable\
      \ might be belonging to any of the data type like int, float, char etc.\n• RULES\
      \ FOR NAMING C VARIABLE =>\n    1) Variable name must begin with letter or underscore.\n\
      \    2) Variables are case sensitive\n    3) They can be constructed with digits,\
      \ letters.\n    4) No special symbols are allowed other than underscore.\n \
      \   e.g:- sum, height, _value"
  
  utter_loop:
  - image: https://www.studytonight.com/c/images/loops-in-c.jpg
    text: "• Loop control statements in C are used to perform looping operations until
      the given condition is true.  • Control comes out of the loop statements once
      condition becomes false.  • There are 3 types of loop control statements in
      C language. They are:- for, while, do-while  • Know the flow chart here:-"

  utter_for_loop:
  - text: • For loop is used to execute\
      \ a set of statements repeatedly until a particular condition is satisfied.\
      \ \n• We can say it is an open ended loop.\n• In for loop we have exactly two\
      \ semicolons, one after initialization and second after the condition. \n• In\
      \ this loop we can have more than one initialization or increment/decrement,\
      \ separated using comma operator. But it can have only one condition. \n• The\
      \ for loop is executed as follows:-\n    - It first evaluates the initialization\
      \ code.\n    - Then it checks the condition expression.\n    - If it is true,\
      \ it executes the for-loop body.\n    - Then it evaluate the increment/decrement\
      \ condition and again follows from step 2.\n    - When the condition expression\
      \ becomes false, it exits the loop."

  utter_while_loop:
  - text: "While loop is one of the loop statement in C which allows people to repeat their commands\n
      . The while loop loops through a block of code as long as a specified condition is true."

  utter_switch_case:
  - image: https://i.imgur.com/e5g1kWx.png
    text: "• Above image shall give synatx of switch case. \n • The switch statement\
      \ allows us to execute one code block among many alternatives.\nYou can do the\
      \ same thing with the if...else..if ladder. However, the syntax of the switch\
      \ statement is much easier to read and write.  "

  utter_runtime_error:
  - text: "Sometimes the errors exist during the execution-time even after the successful\
      \ compilation known as run-time errors.\nWhen the program is running, and it\
      \ is not able to perform the operation is the main cause of the run-time error.\n\
      The division by zero is the common example of the run-time error.\nThese errors\
      \ are very difficult to find, as the compiler does not point to these errors."

  utter_error:
  - text: "Errors are the problems or the faults that occur in the program, which
      makes the behavior of the program abnormal, and experienced developers can also
      make these faults. Programming errors are also known as the bugs or faults,
      and the process of removing these bugs is known as debugging. These errors are
      detected either during the time of compilation or execution. Thus, the errors
      must be removed from the program for the successful execution of the program.
      There are mainly five types of errors exist in C programming: 1]  Syntax error
      2] Run-time error 3]  Linker error 4]  Logical error 5]  Semantic error"

  utter_syntax_error:
  - text: "Syntax errors are also known as the compilation errors as they occurred\
      \ at the compilation time, or we can say that the syntax errors are thrown by\
      \ the compilers. These errors are mainly occurred due to the mistakes while\
      \ typing or do not follow the syntax of the specified programming language.\
      \ These mistakes are generally made by beginners only because they are new to\
      \ the language. These errors can be easily debugged or corrected.  For example:\
      \ If we want to declare the variable of type integer,\n    int a; // this is\
      \ the correct form\n    Int a; // this is an incorrect form.\nCommonly occurred\
      \ syntax errors are: 1] If we miss the parenthesis while writing the code.\
      \ 2] Displaying the value of a variable without its declaration. 3] If we miss\
      \ the semicolon (;) at the end of the statement."

  utter_break:
  - text: "• Sometimes, while executing a loop, it becomes necessary to skip a part\
      \ of the loop or to leave the loop as soon as certain condition becomes true.\
      \ This is known as jumping out of loop. 1) break statement:\n    When break\
      \ statement is encountered inside a loop, the loop is immediately exited and\
      \ the program continues with the statement immediately following the loop.\n"

  utter_do_while_loop:
  - text: "• The image shall give synatx of while loop. \n• In some situations it\
      \ is necessary to execute body of the loop before testing the condition. \n\
      • Such situations can be handled with the help of do-while loop. do statement\
      \ evaluates the body of the loop first and at the end, the condition is checked\
      \ using while statement. \n•It means that the body of the loop will be executed\
      \ at least once, even though the starting condition inside while is initialized\
      \ to be false."
  
  utter_array:
  - text: "Array in C can be defined as a method of clubbing multiple entities
      \n of similar type into a larger group. These entities or elements can be of int,\n
      float, char, or double data type or can be of user-defined data types too like  structures."

session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
